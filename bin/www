#!/usr/bin/env node

// === MODULE DEPENDENCIES ===

const app = require('../app')
const debug = require('debug')('vintrace-app:server')
const http = require('http')

// === STORES PORT IN EXPRESS ===

const port = normalizePort(process.env.PORT || '8000')
app.set('port', port)

// === CREATES HTTP SERVER ===

const server = http.createServer(app)

// === LISTENS TO PORT ===

server.listen(port, console.log(`Server running on ${port}`))
server.on('error', onError)
server.on('listening', onListening)

// === NORMALIZES PORT ===

function normalizePort (val) {
  const port = parseInt(val, 10)

  if (isNaN(port)) {
    // === PIPE ===
    return val
  }

  if (port >= 0) {
    // === PORT ===
    return port
  }

  return false
}

// === "ERROR" EVENT ===

function onError (error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

// === LISTENING EVENTS ===

function onListening () {
  const addr = server.address()
  const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
  debug('Listening on ' + bind)
}
